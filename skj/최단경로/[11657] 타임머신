import sys
input=sys.stdin.readline
INF=int(1e9)
n,m=map(int,input().split())

graph=[]

for _ in range(m):
    start,end,dist=map(int,input().split())
    graph.append((start,end,dist))

distance=[INF]*(n+1)

def bellman_ford(start):
    distance[start]=0
    for i in range(n):
        for j in range(m):
            now,next,cost=graph[j]
            if distance[now]!=INF and distance[now]+cost< distance[next]:
                distance[next]=distance[now]+cost
                if i==n-1:
                    return True
    return False


if bellman_ford(1):
    print(-1)
else:
    for i in range(2,n+1):
        if distance[i]==INF:
            print(-1)
        else:
            print(distance[i])
