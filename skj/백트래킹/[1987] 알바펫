import sys
input=sys.stdin.readline
r,c=map(int,input().split())

dict={'A':0,'B':0,'C':0,'D':0,'E':0,'F':0,'G':0,'H':0,'I':0,'J':0,'K':0,'L':0,'M':0,'N':0,
'O':0,'P':0,'Q':0,'R':0,'S':0,'T':0,'U':0,'V':0,'W':0,'X':0,'Y':0,'Z':0,}


graph=list()
answer=list()
for _ in range(r):
    graph.append(list(input()))

dx=[-1,0,1,0]
dy=[0,1,0,-1]

result=0

def dfs(x,y,depth,word):
    global result
    result=max(result,depth)
    for i in range(4):
        nx=x+dx[i]
        ny=y+dy[i]
        if 0<=nx<r and 0<=ny<c and dict[word]==0:
            dict[word]=1
            dfs(nx,ny,depth+1,graph[nx][ny])
            dict[word]=0

dfs(0,0,1,graph[0][0])
print(result-1)


#시간 초과


import sys
input=sys.stdin.readline
r,c=map(int,input().split())

graph=[list(map(lambda x:ord(x)-65,input())) for _ in range(r)]
check=[0]*26

dx=[-1,0,1,0]
dy=[0,1,0,-1]

result=0
def dfs(x,y,depth):
    global result
    result=max(result,depth)
    for i in range(4):
        nx=x+dx[i]
        ny=y+dy[i]
        if 0<=nx<r and 0<=ny<c and check[graph[nx][ny]]==0:
            check[graph[nx][ny]]=1
            dfs(nx,ny,depth+1)
            check[graph[nx][ny]]=0

check[graph[0][0]]=1
dfs(0,0,1)
print(result)


시간초과 해결
