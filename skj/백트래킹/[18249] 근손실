from itertools import permutations
n,k=map(int,input().split())

num=list(map(int,input().split()))
number=[i for i in range(n)]
temp=list(permutations(number,n))


answer=0
for i in temp:
    mus=500
    flag=1
    for j in i:
        mus+=(num[j]-k)
        if mus<500:
            flag=0
    if flag:
        answer+=1

print(answer)

----------------------------
비 백트래킹 같은 풀이

n,k=map(int,input().split())

num=list(map(int,input().split()))

answer=0

visited=[False]*n
def dfs(depth,mus):
    global answer
    if depth==n:
        answer+=1
        return 

    for i in range(len(num)):
        if visited[i]==True or mus<500:
            continue
        visited[i]=True
        dfs(depth+1,mus-k+num[i])
        visited[i]=False
       

dfs(0,500)
print(answer) 

        
