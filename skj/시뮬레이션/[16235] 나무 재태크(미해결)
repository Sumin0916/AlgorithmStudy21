import heapq,sys
input=sys.stdin.readline
n,m,k=map(int,input().split())   #k는 연도 

land=[[5]*(n) for _ in range(n)] #토지 

board=[] # 양분 
tree=[]
for _ in range(n):
    board.append(list(map(int,input().split())))

for _ in range(m):
    x,y,year=map(int,input().split())
    tree.append((year,x,y))

def spring(tree,land):
    result=[]
    kill_tree=[]
    while tree:
        year,x,y=heapq.heappop(tree)
        if year>land[x-1][y-1]:
            kill_tree.append((year,x,y))
        elif year<=land[x-1][y-1]:
            land[x-1][y-1]-=year
            result.append((year+1,x,y))

    return kill_tree,result

def summer(kill_tree):
    while kill_tree:
        year,x,y=kill_tree.pop()
        year=year//2
        land[x-1][y-1]+=year
    return land 

def fall(tree):
    dx=[-1,-1,-1,0,0,1,1,1]
    dy=[-1,0,1,-1,1,-1,0,1]
    for year,x,y in tree:
        if year%5==0:
            for i in range(8):
                nx=x+dx[i]
                ny=y+dy[i]
                if 0<=nx-1<n and 0<=ny-1<n:
                    tree.append((1,nx,ny))
        else: 
            continue
    return tree

def winter(land,board):
    for i in range(n):
        for j in range(n):
            land[i][j]+=board[i][j]
    return land

for _ in range(k):
    kill_tree,tree=spring(tree,land)
    land=summer(kill_tree)
    tree=fall(tree)
    land=winter(land,board)

print(len(tree))

#시간초과 발생...

from collections import deque
import sys
input = sys.stdin.readline
def spring():
    for i in range(n):
        for j in range(n):
            len_t = len(t[i][j])
            for k in range(len_t):
                if t[i][j][k] <= no[i][j]:
                    no[i][j] -= t[i][j][k]
                    t[i][j][k] += 1
                else:
                    for _ in range(k, len_t):
                        no[i][j] += t[i][j].pop() // 2
                    break
def fall():
    for i in range(n):
        for j in range(n):
            for k in t[i][j]:
                if k % 5 == 0:
                    for l in range(8):
                        x = i + dx[l]
                        y = j + dy[l]
                        if 0 <= x < n and 0 <= y < n:
                            t[x][y].appendleft(1)
            no[i][j] += s[i][j]
dx = [1, -1, 0, 0, 1, -1, 1, -1]
dy = [0, 0, -1, 1, 1, -1, -1, 1]
n, m, k = map(int, input().split())
s = []
t = [[deque() for i in range(n)] for i in range(n)]
no = [[5] * n for i in range(n)]
for i in range(n):
    s.append(list(map(int, input().split())))
for i in range(m):
    x, y, z = map(int, input().split())
    t[x - 1][y - 1].append(z)
for i in range(k):
    spring()
    fall()
cnt = 0
for i in range(n):
    for j in range(n):
        cnt += len(t[i][j])
print(cnt)

#해결책은 deque였다
